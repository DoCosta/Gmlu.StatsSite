@using Newtonsoft.Json
@model StatsViewModel

<link href="/css/bootstrap-colorpicker.css" rel="stylesheet">


@foreach (var pi in Model.Raspberrys)
{
    <div id="div-@pi.Id">
        <h2>Color @pi.Id</h2>
        <input id="@pi.Id" type="text" />
        <p></p>
    </div>
}


<form method="post" asp-controller="Stats" asp-action="Filter">

    <div>

        <input asp-for="DateToFilter" id="date" type="text" class="form-control" />
    </div>

    <fieldset>
        <div>
            <p> </p>
            <label>&nbsp;</label>
            <input type="submit" value="Submit" class="submit" />
        </div>
    </fieldset>
</form>

<canvas id="tempChart" width="400" height="300"></canvas>
<canvas id="HumChart" width="400" height="300"></canvas>

@section Scripts {

    <script>

        $(function() {

            $("#date").datepicker({
                dateFormat: 'dd.mm.yy',
                pickTime: false,
                autoclose: true,
                forceParse: false,
                calendarWeeks: true,
                keyboardNavigation: false,
            });

            var contextTempChart = document.getElementById('tempChart').getContext('2d');
            var tempChart = new Chart(contextTempChart,
                {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(JsonConvert.SerializeObject(@Model.Raspberrys.ToArray()[0].GetDates)),
                        datasets: [],
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            animation: {
                                duration: 0
                            },
                            hover: {
                                animationDuration: 0
                            },
                            responsiveAnimationDuration: 0
                        }
                    },
                });


            var contextHumChart = document.getElementById('HumChart').getContext('2d');
            var humChart = new Chart(contextHumChart,
                {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(JsonConvert.SerializeObject(@Model.Raspberrys.ToArray()[0].GetDates)),
                        datasets: [],
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            animation: {
                                duration: 0
                            },
                            hover: {
                                animationDuration: 0
                            },
                            responsiveAnimationDuration: 0
                        }
                    }
                }
            );

            @foreach (var raspberry in @Model.Raspberrys)
            {
                <text>
                    var color = '#000000';

                    console.log(document.cookie);

                    if (document.cookie != null) {
                        var cookieValue1 = document.cookie
                            .split('; ')
                            .find(row => row.startsWith('@raspberry.Id' + '='))
                            .split('=')[1];

                        console.log(cookieValue1);

                        color = cookieValue1;
                    }

                    $('#@raspberry.Id').colorpicker();

                    $('#@raspberry.Id').on('colorpickerChange',
                        function(event) {
                            $('#@raspberry.Id').css('background-color', event.color.toString());

                            tempChart.data.datasets.find(x => x.label === '@raspberry.Name').borderColor = event.color.toString();
                            humChart.data.datasets.find(x => x.label === '@raspberry.Name').borderColor = event.color.toString();
                            tempChart.update();
                            humChart.update();

                            document.cookie = '@raspberry.Id' + '=' + event.color.toString();
                        });

                    var data = @Html.Raw(JsonConvert.SerializeObject(raspberry.GetTemp));

                    if (data.length > 0) {
                        tempChart.data.datasets.push({
                            label: '@raspberry.Name',
                            borderColor: color,
                            data: @Html.Raw(JsonConvert.SerializeObject(raspberry.GetTemp))
                        });
                        tempChart.update();

                        humChart.data.datasets.push({
                            label: '@raspberry.Name',
                            borderColor: color,
                            data: @Html.Raw(JsonConvert.SerializeObject(raspberry.GetHum))
                        });
                        humChart.update();

                    }
                </text>
            }
        });

    </script>
}